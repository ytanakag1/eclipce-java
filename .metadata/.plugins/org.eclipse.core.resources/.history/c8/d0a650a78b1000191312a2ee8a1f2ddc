package application;
	
import java.net.*;
import java.io.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.stream.Collectors;

import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.fxml.FXMLLoader;


public class Main extends Application {
	@Override
	public void start(Stage primaryStage) {
		try {
			BorderPane root = (BorderPane)FXMLLoader.load(getClass().getResource("fm.fxml"));
			//Scene scene = new Scene(root,400,400);
			Scene scene = new Scene(root);
			scene.getStylesheets().add(getClass().getResource("application.css").toExternalForm());
			primaryStage.setScene(scene);
			primaryStage.setTitle("eiTangotJava");
			primaryStage.show();
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	private static final String PATH = "D:\\Users\\ichiro\\eitango_h1nam4.txt";
	
	public static void main(String[] args) {
		
//		Path path = Paths.get(PATH);
//    Runnable test4 = () -> {
//      try {
//          List<String> lines = Files.lines(path, StandardCharsets.UTF_8).collect(Collectors.toList());
//          System.out.println(lines);
//      } catch (IOException e) {
//          e.printStackTrace();
//      }
//  };
//  test4.run();
    
//		JavaFXアプリケーションを起動するためのメソッドです。
		launch(args);
		
		
		
		
		
		try{ //概ねの操作で例外処理が必要です。
      //URLを作成する
      String adress="https://ultimai.org/mdlsrc/fiddle/eitangoz.txt";
      URL url=new URL(adress);//URLを設定

        // URL接続
       HttpURLConnection connect = (HttpURLConnection)url.openConnection();//サイトに接続
         connect.setRequestMethod("GET");//プロトコルの設定
         InputStream in=connect.getInputStream();//ファイルを開く
         
         // ネットからデータの読み込み
         String str;//ネットから読んだデータを保管する変数を宣言
         str=readString(in);//1行読み取り
         while (str!=null) { //読み取りが成功していれば
           System.out.println(str);//コンソールに出力
           str=readString(in);//次を読み込む
         }
     
         // URL切断
         in.close();//InputStreamを閉じる
         connect.disconnect();//サイトの接続を切断

   }catch(Exception e){
     //例外処理が発生したら、表示する
     System.out.println("Err ="+e);
   }
		
	} // end main method
		
		
	
//InputStreamより１行だけ読む（読めなければnullを返す）
  static String readString(InputStream in){
    try{
      int l;//呼んだ長さを記録
      int a;//読んだ一文字の記録に使う
      byte b[]=new byte[2048];//呼んだデータを格納
      a=in.read();//１文字読む
      if (a<0) return null;//ファイルを読みっていたら、nullを返す
      l=0;
      while(a>10){//行の終わりまで読む
        if (a>=' '){//何かの文字であれば、バイトに追加
          b[l]=(byte)a;
          l++;
        }
a=in.read();//次を読む
      }
      return new String(b,0,l);//文字列に変換
    }catch(IOException e){
      //Errが出たら、表示してnull値を返す
      System.out.println("Err="+e);
      return null;
    }
  }
		
}




